class Solution {
    public int findCircleNum(int[][] isConnected) {
        int n=isConnected.length;
        boolean visited[]=new boolean[n];
        Queue<Integer> q=new LinkedList<>();
        int c=0;
        for(int i=0;i<n;i++){
            if(!visited[i]){
                c++;
                checkprovince(i,isConnected,n,q,visited);
            }
        }
        return c;
    }
    public void checkprovince(int p,int[][] isConnected,int n,Queue<Integer> q,boolean[] visited){
        q.add(p);
        while(q.size()>0){
            int val=q.remove();
            visited[val]=true;
            for(int i=0;i<n;i++){
                if(!visited[i] && isConnected[val][i]==1)
                q.add(i);
            }
        }
    }
}
