class Solution {
    public int[][] updateMatrix(int[][] mat) {
        int n=mat.length,m=mat[0].length;
        int d[][]=new int[n][m];
        boolean v[][]=new boolean[n][m];
        Queue<int[]> q=new LinkedList<>();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]==0){
                    q.add(new int[]{i,j,0});
                    v[i][j]=true;
                }
            }
        }
        int x[]={-1,1,0,0};
        int y[]={0,0,-1,1};
        while(q.size()>0){
            int p[]=q.remove();
            int row=p[0];
            int col=p[1];
            int l=p[2];
            d[row][col]=l;
            for(int i=0;i<4;i++){
                int dx=p[0]+x[i];
                int dy=p[1]+y[i];
                if(dx>=0 && dx<n && dy>=0 && dy<m && !v[dx][dy]){
                    q.add(new int[]{dx,dy,l+1});
                    v[dx][dy]=true;
                }
            }
        }
        return d;
    }
}
