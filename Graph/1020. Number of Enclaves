class Solution {
    public int numEnclaves(int[][] grid) {
        int n=grid.length,m=grid[0].length,c=0;
        Queue<int[]> q=new LinkedList<>();
        boolean v[][]=new boolean[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==0)
                v[i][j]=true;
                else
                if(i==0 || j==0 || i==n-1 || j==m-1)
                q.add(new int[]{i,j});
            }
        }
        int x[]={-1,1,0,0};
        int y[]={0,0,-1,1};
        while(!q.isEmpty()){
            int p[]=q.remove();
            v[p[0]][p[1]]=true;
            for(int i=0;i<4;i++){
                int dx=p[0]+x[i];
                int dy=p[1]+y[i];
                if(dx>=0 && dx<n && dy>=0 && dy<m && !v[dx][dy]){
                    v[dx][dy]=true;
                    q.add(new int[]{dx,dy});
                }
            }
        }
        for(int i=1;i<n-1;i++){
            for(int j=1;j<m-1;j++){
                if(!v[i][j])
                c++;
            }
        }
        return c;
    }
}
