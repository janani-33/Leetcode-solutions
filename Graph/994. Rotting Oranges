class Solution {
    public int orangesRotting(int[][] grid) {
        Queue<int[]> q=new LinkedList<>();
        int c=0,fresh=0,rf=0,n=grid.length,m=grid[0].length;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1)
                fresh++;
                if(grid[i][j]==2)
                q.add(new int[]{i,j});
            }
        }
        if(fresh==0)
        return 0;
        int x[]={0,0,-1,1};
        int y[]={-1,1,0,0};
        while(q.size()>0){
            int s=q.size();
            for(int i=0;i<s;i++){
                int p[]=q.remove();
                for(int j=0;j<4;j++){
                    int dx=p[0]+x[j];
                    int dy=p[1]+y[j];
                    if(dx>=0 && dx<n && dy>=0 && dy<m && grid[dx][dy]==1){
                        grid[dx][dy]=2;
                        q.add(new int[]{dx,dy});
                        rf++;
                    }
                }
            }
            c++;
        }
        if(fresh==rf)
        return c-1;
        else
        return -1;
    }
}
