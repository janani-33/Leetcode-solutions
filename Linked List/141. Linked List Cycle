/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head==null)
        return false;
        ArrayList<String> list=new ArrayList<>();
        while(head.next!=null && !list.contains(String.valueOf(head.next))){
            list.add(String.valueOf(head.next));
            head=head.next;
        }
        return (head.next==null)?false:true;
    }
}
