/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode temp1=list1;
        ListNode temp2=list2;
        if(list1==null)
        return list2;
        if(temp1!=null && temp2!=null && temp2.val<temp1.val){
            ListNode st=list2;
            ListNode lt=new ListNode();
            while(temp1!=null && temp2!=null && temp2.val<=temp1.val){
                lt=temp2;
                temp2=temp2.next;
                list2=list2.next;
            }
            lt.next=temp1;
            list1=st;
        }
        while(list2!=null){
            temp2=list2;
            ListNode t=new ListNode();
            while(temp1!=null && temp1.val<=temp2.val){
                t=temp1;
                temp1=temp1.next;
            }
            if(temp1==null){
                t.next=list2;
                break;
            }
            list2=list2.next;
            ListNode swap=t.next;
            t.next=temp2;
            temp2.next=swap;
            temp1=t;
        }
        return list1;
    }
}
